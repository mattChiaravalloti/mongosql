tests:
  - description: HELP-57147
    query: "SELECT `var_group_variables__count` `var_group_variables__count`, `plot__count` `plot__count`, `notation__count` `notation__count` FROM ( SELECT `main__variable`.identifier `variable__identifier`, count( `main__plot`._id) `plot__count`, count( `main__notation`._id) `notation__count` FROM e2e_queries_shared.notation AS `main__notation` LEFT JOIN e2e_queries_shared.notebook AS `main__notebook` ON `main__notation`.notebookId = `main__notebook`._id LEFT JOIN e2e_queries_shared.plot AS `main__plot` ON `main__notation`.subjectId = `main__plot`._id LEFT JOIN e2e_queries_shared.variable AS `main__variable` ON `main__variable`._id = `main__notation`.variableId LEFT JOIN e2e_queries_shared.opTask AS `main__op_task` ON `main__notebook`.observationRoundId = `main__op_task`._id LEFT JOIN ( SELECT variables_variableId, _id FROM FLATTEN( UNWIND( e2e_queries_shared.varGroup WITH PATH => variables, INDEX => idx ) ) ) AS `main__var_group_variables` ON `main__op_task`.variableGroupId = `main__var_group_variables`._id WHERE (`main__notebook`.trialId = CAST('65b3ca00089363af01fa2e38' AS OBJECTID)) GROUP BY `variable__identifier` ) as q_0 LEFT JOIN ( SELECT `Y`.`variable__identifier`, count( `var_group_variables_key__var_group_variables`._id ) `var_group_variables__count` FROM ( SELECT `var_group_variables_key__variable`.identifier `variable__identifier`, `X`._id `var_group_variables__id` FROM e2e_queries_shared.notation AS `var_group_variables_key__notation` LEFT JOIN e2e_queries_shared.notebook AS `var_group_variables_key__notebook` ON `var_group_variables_key__notation`.notebookId = `var_group_variables_key__notebook`._id LEFT JOIN e2e_queries_shared.plot AS `var_group_variables_key__plot` ON `var_group_variables_key__notation`.subjectId = `var_group_variables_key__plot`._id LEFT JOIN e2e_queries_shared.variable AS `var_group_variables_key__variable` ON `var_group_variables_key__variable`._id = `var_group_variables_key__notation`.variableId LEFT JOIN e2e_queries_shared.opTask AS `var_group_variables_key__op_task` ON `var_group_variables_key__notebook`.observationRoundId = `var_group_variables_key__op_task`._id LEFT JOIN ( SELECT variables_variableId, _id FROM FLATTEN( UNWIND( e2e_queries_shared.varGroup WITH PATH => variables, INDEX => idx ) ) ) AS `X` ON `var_group_variables_key__op_task`.variableGroupId = `X`._id WHERE ( `var_group_variables_key__notebook`.trialId = '65b3ca00089363af01fa2e38'::OBJECTID ) ) AS `Y` LEFT JOIN ( SELECT variables_variableId, _id FROM FLATTEN( UNWIND( e2e_queries_shared.varGroup WITH PATH => variables, INDEX => idx ) ) ) AS `var_group_variables_key__var_group_variables` ON `Y`.`var_group_variables__id` = `var_group_variables_key__var_group_variables`._id GROUP BY `variable__identifier` ) as q_1 ON ( q_0.`variable__identifier` = q_1.`variable__identifier`)"
    current_db: e2e_queries_shared
    result: []

  - description: Can use $ and . characters in collection aliases
    query: "SELECT * FROM foo as `$foo.alias`"
    current_db: e2e_queries_db2
    result:
      - {
          "$foo.alias":
            {
              "_id": 0,
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
        }
      - {
          "$foo.alias":
            {
              "_id": 1,
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
        }

  - description: Can use $ and . characters in field aliases
    query: "SELECT VALUE { '$a.alias': a } FROM foo"
    current_db: e2e_queries_db2
    result:
      - { "": { "$a.alias": { "$numberInt": "1" } } }
      - { "": { "$a.alias": { "$numberInt": "2" } } }

  - description: Resolves conflicts for aliases with $ and .
    query: "SELECT * FROM `foo`, `bar.baz`, `_foo`, `bar`"
    current_db: e2e_queries_db2
    result:
      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }

      - {
          "foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "0" },
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }
      - {
          "foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "_foo":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "_foo",
            },
          "bar":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
          "bar.baz":
            {
              "_id": { "$numberInt": "1" },
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar.baz",
            },
        }

  - description: Can use aliases in on when defined in subselects
    query: "SELECT t1.*, t2.* FROM (SELECT * FROM foo AS t1) AS t1 JOIN (SELECT * FROM bar AS t2) as t2 ON t1.a = t2.b"
    current_db: e2e_queries_db2
    result:
      - {
          "t1":
            {
              "_id": 0,
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "foo",
            },
          "t2":
            {
              "_id": 1,
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "bar",
            },
        }
      - {
          "t1":
            {
              "_id": 1,
              "a": { "$numberInt": "2" },
              "b": { "$numberInt": "1" },
              "coll": "foo",
            },
          "t2":
            {
              "_id": 0,
              "a": { "$numberInt": "1" },
              "b": { "$numberInt": "2" },
              "coll": "bar",
            },
        }

  - description: Can compare bool column to literal value
    query: "SELECT * from boolz where a = 1"
    current_db: e2e_queries_db2
    result:
      - {
          "boolz": {
            "_id": 0,
            "a": true,
            "b": { "$numberInt": "1" },
          }
        }

  - description: Can still compare numerics
    query: "SELECT * from boolz where b = 1"
    current_db: e2e_queries_db2
    result:
      - { "boolz": { "_id": 0, "a": true, b: 1 } }
      - { "boolz": { "_id": 1, "a": false, b: 1 } }

  - description: Select with multiple bottom works
    query: "SELECT foo.a, bar.*, foo.b from foo, bar"
    current_db: e2e_queries_db2
    result:
      - { "bar": { "_id": 0, "a": 1, "b": 2, "coll": "bar" }, "": { "a": 1, "b": 2 } }
      - { "bar": { "_id": 1, "a": 2, "b": 1, "coll": "bar" }, "": { "a": 1, "b": 2 } }
      - { "bar": { "_id": 0, "a": 1, "b": 2, "coll": "bar" }, "": { "a": 2, "b": 1 } }
      - { "bar": { "_id": 1, "a": 2, "b": 1, "coll": "bar" }, "": { "a": 2, "b": 1 } }

  - description: Select pulls colls from proper collections
    query: "SELECT foo.a, foo2.b from foo, foo2"
    current_db: e2e_queries_db2
    result:
      - { "": { "a": 1, "b": 4 } }
      - { "": { "a": 1, "b": 5 } }
      - { "": { "a": 2, "b": 4 } }
      - { "": { "a": 2, "b": 5 } }

  - description: One clauses
    query: "SELECT * from foo join bar on 1 where 1 having 1"
    current_db: e2e_queries_db2
    result:
      - { "foo": { "_id": 0, "a":  1, "b": 2, "coll": "foo"}, "bar": { "_id": 0, "a":  1, "b": 2, "coll": "bar"} }
      - { "foo": { "_id": 1, "a":  2, "b": 1, "coll": "foo"}, "bar": { "_id": 0, "a":  1, "b": 2, "coll": "bar"} }
      - { "foo": { "_id": 0, "a":  1, "b": 2, "coll": "foo"}, "bar": { "_id": 1, "a":  2, "b": 1, "coll": "bar"} }
      - { "foo": { "_id": 1, "a":  2, "b": 1, "coll": "foo"}, "bar": { "_id": 1, "a":  2, "b": 1, "coll": "bar"} }

  - description: Multiple argument COUNT in non-AGGREGATE phrase works as expected
    query: "SELECT COUNT(DISTINCT foo, baz) AS c FROM bar2 GROUP BY NULL AS n"
    current_db: "e2e_queries_db1"
    result:
      - { '': { 'c': 2 } }

  - description: derived join datasource with filter correctness
    current_db: e2e_queries_db1
    query: "SELECT * FROM ( SELECT OTBL.foo as ofoo, ITBL.foo as ifoo, baz FROM e2e_queries_db1.bar AS OTBL LEFT OUTER JOIN e2e_queries_db1.bar2 AS ITBL ON (OTBL._id = ITBL._id)) AS ITBL WHERE baz > 60"
    result:
      - {
        "ITBL": {"ofoo": 1, "ifoo": 42, "baz": 63}
      }

  - description: Subquery filtering against nested unwinds is semantically valid
    current_db: e2e_queries_db3
    query: "SELECT * FROM UNWIND((SELECT * FROM UNWIND (foo WITH PATH => a1)) AS f WITH PATH => a2) WHERE f.a2.x+1 IN (1,2)"
    result:
      - { "f": { "_id": 0, "a1": 1, "a2": { "x": 1 } } }
      - { "f": { "_id": 0, "a1": 2, "a2": { "x": 1 } } }
      - { "f": { "_id": 0, "a1": 3, "a2": { "x": 1 } } }

  - description: SELECT many fields with some aliases containing dots and starting with dollars
    current_db: test
    query: "SELECT VALUE {} FROM [{}] as arr"
    result:
      - { '':  {} }

  - description: Nullable expression is treated as nullable inside an operator that requires SQL null semantics
    current_db: e2e_queries_db3
    query: "SELECT * FROM bar WHERE CHAR_LENGTH(CASE WHEN a < 5 THEN NULL WHEN a < 10 THEN '' END) <> 0"
    result: []
