tests:
  - description: for expression with determined types, asserted type must be among those types
    current_db: spec_query_type_assertion
    query: "SELECT v1::!DOUBLE AS v1 FROM bar_schema"
    should_compile: false
    algebrize_error: "schema checking failed for ::!: required Atomic(Double), found AnyOf({Atomic(String), Atomic(Integer), Atomic(Null)})"

  - description: correctness test for type assertion in schema mode
    current_db: spec_query_type_assertion
    query: "SELECT v1::!INT AS v1 FROM bar_schema"
    result:
      - {'': {v1: "abc"}}
      - {'': {v1: {"$numberInt": "2"}}}
      - {'': {v1: null}}

  - description: correctness test for type assertion in schema-less mode, target type can be any
    current_db: spec_query_type_assertion
    query: "SELECT v1::!DOUBLE AS v1 FROM bar"
    result:
      - {'': {v1: "abc"}}
      - {'': {v1: {"$numberInt": "2"}}}
      - {'': {v1: null}}

